/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Radnik;
import domen.UplatnoMesto;
import domen.Utakmica;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import komponente.tabela.model.ModelTabeleRadnici;
import komponente.tabela.model.ModelTabeleUtakmice;
import komunikacija.KontrolerKI;
import repozitorijum.Repozitorijum;
import transfer.KlijentTransferObjekat;
import transfer.ServerTransferObjekat;

/**
 *
 * @author KORISNIK
 */
public class JPanelIzmenaRadnika extends javax.swing.JPanel {

    private List<Radnik> radnici;
    private ModelTabeleRadnici model;
    private boolean imeUspesno = false;
    private boolean prezimeUspesno = false;
    private boolean korImeUspesno = false;
    private boolean sifraUspesno = false;
    private boolean ponovljenaSifraUspesno = false;
    public static Thread nitProvereIzmenaRadnika;

    /**
     * Creates new form JPanelIzmenaRadnika
     */
    public JPanelIzmenaRadnika() {
        initComponents();
        pripremiPanel();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jRadioButtonID = new javax.swing.JRadioButton();
        jRadioButtonImeIPrezime = new javax.swing.JRadioButton();
        jTextFieldPretraga = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableRadnici = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldID = new javax.swing.JTextField();
        jTextFieldIme = new javax.swing.JTextField();
        jTextFieldPrezime = new javax.swing.JTextField();
        jTextFieldKorisnickoIme = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPasswordField2 = new javax.swing.JPasswordField();
        jRadioButtonAdministrator = new javax.swing.JRadioButton();
        jRadioButtonRadnik = new javax.swing.JRadioButton();
        jComboBoxUplatnaMesta = new javax.swing.JComboBox<>();
        jLabelSifraJeKratka = new javax.swing.JLabel();
        jButtonSacuvajIzmene = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Pronadji radnika po:");

        buttonGroup2.add(jRadioButtonID);
        jRadioButtonID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButtonID.setSelected(true);
        jRadioButtonID.setText("ID-u");

        buttonGroup2.add(jRadioButtonImeIPrezime);
        jRadioButtonImeIPrezime.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButtonImeIPrezime.setText("Imenu i prezimenu");

        jTextFieldPretraga.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldPretraga.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldPretragaCaretUpdate(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(jLabel1)
                .addGap(61, 61, 61)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonImeIPrezime)
                    .addComponent(jRadioButtonID))
                .addGap(29, 29, 29)
                .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(252, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButtonID)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButtonImeIPrezime)
                .addGap(0, 28, Short.MAX_VALUE))
        );

        jTableRadnici.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jTableRadnici.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableRadnici);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Izmena radnika"));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("ID radnika:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Ime:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Prezime:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Korisnicko ime:");

        jTextFieldID.setEditable(false);
        jTextFieldID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldID.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTextFieldIme.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldIme.setNextFocusableComponent(jTextFieldPrezime);
        jTextFieldIme.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldImeCaretUpdate(evt);
            }
        });

        jTextFieldPrezime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldPrezime.setNextFocusableComponent(jTextFieldKorisnickoIme);
        jTextFieldPrezime.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldPrezimeCaretUpdate(evt);
            }
        });

        jTextFieldKorisnickoIme.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jTextFieldKorisnickoIme.setNextFocusableComponent(jPasswordField1);
        jTextFieldKorisnickoIme.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldKorisnickoImeCaretUpdate(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Sifra:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Ponovite sifru:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Status:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Uplatno mesto:");

        jPasswordField1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField1.setNextFocusableComponent(jPasswordField2);
        jPasswordField1.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jPasswordField1CaretUpdate(evt);
            }
        });

        jPasswordField2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPasswordField2.setNextFocusableComponent(jComboBoxUplatnaMesta);
        jPasswordField2.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jPasswordField2CaretUpdate(evt);
            }
        });

        buttonGroup1.add(jRadioButtonAdministrator);
        jRadioButtonAdministrator.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButtonAdministrator.setText("Administrator");

        buttonGroup1.add(jRadioButtonRadnik);
        jRadioButtonRadnik.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jRadioButtonRadnik.setSelected(true);
        jRadioButtonRadnik.setText("Radnik");

        jComboBoxUplatnaMesta.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBoxUplatnaMesta.setNextFocusableComponent(jButtonSacuvajIzmene);

        jLabelSifraJeKratka.setForeground(new java.awt.Color(255, 0, 0));
        jLabelSifraJeKratka.setText("sifra je kratka");

        jButtonSacuvajIzmene.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButtonSacuvajIzmene.setText("Sacuvaj izmene");
        jButtonSacuvajIzmene.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajIzmeneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextFieldID, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
                                    .addComponent(jTextFieldIme)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                                .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(jTextFieldKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(154, 154, 154)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxUplatnaMesta, 0, 302, Short.MAX_VALUE)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButtonRadnik)
                    .addComponent(jRadioButtonAdministrator)
                    .addComponent(jButtonSacuvajIzmene, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelSifraJeKratka)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelSifraJeKratka))
                .addGap(36, 36, 36)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jPasswordField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(32, 32, 32))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jRadioButtonRadnik)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jRadioButtonAdministrator))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel8)))
                .addGap(7, 7, 7)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel9)
                        .addComponent(jComboBoxUplatnaMesta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26)
                .addComponent(jButtonSacuvajIzmene)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldPretragaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldPretragaCaretUpdate
        // TODO add your handling code here:
        if (jRadioButtonID.isSelected()) {
            model.obrisiSveRadnike();
            String id = jTextFieldPretraga.getText().trim();
            for (Radnik radnik : radnici) {
                String radnikID = Integer.toString(radnik.getIdRadnika());
                if (radnikID.startsWith(id)) {
                    model.ubaciRadnika(radnik);

                }
            }
            if (model.getRowCount() == 0) {
                model.obrisiSveRadnike();
            }

        } else if (jRadioButtonImeIPrezime.isSelected()) {
            model.obrisiSveRadnike();
            String naziv = jTextFieldPretraga.getText().trim();
            for (Radnik radnik : radnici) {
                if (radnik.getIme().toLowerCase().contains(naziv.toLowerCase()) || radnik.getPrezime().toLowerCase().contains(naziv.toLowerCase())) {
                    model.ubaciRadnika(radnik);
                }

            }
            if (model.getRowCount() == 0) {
                model.obrisiSveRadnike();
            }

        }
    }//GEN-LAST:event_jTextFieldPretragaCaretUpdate

    private void jTextFieldImeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldImeCaretUpdate
        // TODO add your handling code here:
        String ime = jTextFieldIme.getText();
        if (ime.length() == 0) {
            jTextFieldIme.setBorder(BorderFactory.createLineBorder(Color.red));
            imeUspesno = false;
        } else {
            jTextFieldIme.setBorder(BorderFactory.createLineBorder(Color.green));
            imeUspesno = true;
        }
    }//GEN-LAST:event_jTextFieldImeCaretUpdate

    private void jTextFieldPrezimeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldPrezimeCaretUpdate
        // TODO add your handling code here:
        String prezime = jTextFieldPrezime.getText();
        if (prezime.length() == 0) {
            jTextFieldPrezime.setBorder(BorderFactory.createLineBorder(Color.red));
            prezimeUspesno = false;
        } else {
            jTextFieldPrezime.setBorder(BorderFactory.createLineBorder(Color.green));
            prezimeUspesno = true;
        }
    }//GEN-LAST:event_jTextFieldPrezimeCaretUpdate

    private void jTextFieldKorisnickoImeCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldKorisnickoImeCaretUpdate
        // TODO add your handling code here:
        String korIme = jTextFieldKorisnickoIme.getText();
        if (korIme.length() == 0) {
            jTextFieldKorisnickoIme.setBorder(BorderFactory.createLineBorder(Color.red));
            korImeUspesno = false;
        } else {
            jTextFieldKorisnickoIme.setBorder(BorderFactory.createLineBorder(Color.green));
            korImeUspesno = true;
        }
    }//GEN-LAST:event_jTextFieldKorisnickoImeCaretUpdate

    private void jPasswordField1CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jPasswordField1CaretUpdate
        // TODO add your handling code here:
        String sifra = jPasswordField1.getText();
        if (sifra.length() < 8) {
            jPasswordField1.setBorder(BorderFactory.createLineBorder(Color.red));
            jLabelSifraJeKratka.setVisible(true);
            sifraUspesno = false;
        } else {
            jPasswordField1.setBorder(BorderFactory.createLineBorder(Color.green));
            jLabelSifraJeKratka.setVisible(false);
            sifraUspesno = true;
        }
    }//GEN-LAST:event_jPasswordField1CaretUpdate

    private void jPasswordField2CaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jPasswordField2CaretUpdate
        // TODO add your handling code here:
        String ponovljenaSifra = jPasswordField2.getText();
        String sifra = jPasswordField1.getText();
        if (!sifra.equals(ponovljenaSifra) || ponovljenaSifra.length() == 0) {
            jPasswordField2.setBorder(BorderFactory.createLineBorder(Color.red));
            ponovljenaSifraUspesno = false;
        } else {
            jPasswordField2.setBorder(BorderFactory.createLineBorder(Color.green));
            ponovljenaSifraUspesno = true;
        }
    }//GEN-LAST:event_jPasswordField2CaretUpdate

    private void jButtonSacuvajIzmeneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajIzmeneActionPerformed
        // TODO add your handling code here:
        Radnik r = new Radnik();
        r.setIdRadnika(Integer.parseInt(jTextFieldID.getText()));
        String status = "";
        if (jRadioButtonRadnik.isSelected()) {
            status = "radnik";
        } else if (jRadioButtonAdministrator.isSelected()) {
            status = "administrator";
        }
        UplatnoMesto um = (UplatnoMesto) jComboBoxUplatnaMesta.getSelectedItem();
        r.setIme(jTextFieldIme.getText());
        r.setPrezime(jTextFieldPrezime.getText());
        r.setKorisnickoIme(jTextFieldKorisnickoIme.getText());
        r.setStatus(status);
        r.setUplatnoMesto(um);
        r.setSifraRadnika(jPasswordField1.getText());

        try {
            sacuvajRadnika(r);

        } catch (IOException eio) {
            prikaziFormuPrijava();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButtonSacuvajIzmeneActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton jButtonSacuvajIzmene;
    private javax.swing.JComboBox<UplatnoMesto> jComboBoxUplatnaMesta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelSifraJeKratka;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    private javax.swing.JRadioButton jRadioButtonAdministrator;
    private javax.swing.JRadioButton jRadioButtonID;
    private javax.swing.JRadioButton jRadioButtonImeIPrezime;
    private javax.swing.JRadioButton jRadioButtonRadnik;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableRadnici;
    private javax.swing.JTextField jTextFieldID;
    private javax.swing.JTextField jTextFieldIme;
    private javax.swing.JTextField jTextFieldKorisnickoIme;
    private javax.swing.JTextField jTextFieldPretraga;
    private javax.swing.JTextField jTextFieldPrezime;
    // End of variables declaration//GEN-END:variables

    private void pripremiPanel() {
        jLabelSifraJeKratka.setVisible(false);
        postaviBordere();
        try {
            popuniCBUplatnihMesta();
            ucitajRadnike();
            pripremiTabelu();
        } catch (IOException ex) {
            prikaziFormuPrijava();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
        pokreniNitZaProveru();

    }

    private void popuniCBUplatnihMesta() throws IOException, ClassNotFoundException, Exception {
        jComboBoxUplatnaMesta.removeAllItems();
        KlijentTransferObjekat zahtev = new KlijentTransferObjekat();
        zahtev.setOperacija(KlijentTransferObjekat.VRATI_SVA_UPLATNA_MESTA);
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev);
        ServerTransferObjekat odgovor = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor.getSignal() == -1) {
            throw new Exception(odgovor.getPoruka());
        }
        List<UplatnoMesto> uplatnaMesta = (List<UplatnoMesto>) odgovor.getObjekatIzvrsenjaOperacije();

        for (UplatnoMesto um : uplatnaMesta) {
            jComboBoxUplatnaMesta.addItem(um);
        }
    }

    private void prikaziFormuPrijava() {
        JOptionPane.showMessageDialog(this, "Izgubili ste konekciju sa serverom! Probajte ponovo da se ulogujete!");
        FPrijava fp = new FPrijava();
        fp.setLocationRelativeTo(null);
        fp.setResizable(false);
        fp.setVisible(true);
    }

    private void ucitajRadnike() throws IOException, ClassNotFoundException, Exception {
        KlijentTransferObjekat zahtev = new KlijentTransferObjekat();
        zahtev.setOperacija(KlijentTransferObjekat.VRATI_SVE_RADNIKE);
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev);
        ServerTransferObjekat odgovor = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor.getSignal() == -1) {
            throw new Exception(odgovor.getPoruka());
        }
        radnici = (List<Radnik>) odgovor.getObjekatIzvrsenjaOperacije();
        List<Radnik> pomocnaLista = new ArrayList<>();
        for (int i = 0; i < radnici.size(); i++) {

            if (radnici.get(i).getIme() != null) {
                if (radnici.get(i).getStatus().equals("radnik")) {
                    pomocnaLista.add(radnici.get(i));
                }
            }

        }
        radnici = pomocnaLista;
    }

    private void pripremiTabelu() {
        model = new ModelTabeleRadnici(radnici);
        jTableRadnici.setModel(model);

        jTableRadnici.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent me) {
                JTable table = (JTable) me.getSource();
                Point p = me.getPoint();
                int row = table.rowAtPoint(p);
                if (me.getClickCount() == 2) {

                    Radnik r = model.vratiRadnika(row);
                    popuniPolja(r);
                }
            }

        });
    }

    private void popuniPolja(Radnik r) {
        jTextFieldID.setText(Integer.toString(r.getIdRadnika()));
        jTextFieldIme.setText(r.getIme());
        jTextFieldPrezime.setText(r.getPrezime());
        jTextFieldKorisnickoIme.setText(r.getKorisnickoIme());
        jPasswordField1.setText(r.getSifraRadnika());
        jPasswordField2.setText(r.getSifraRadnika());
        for (int i = 0; i < jComboBoxUplatnaMesta.getItemCount(); i++) {
            if (jComboBoxUplatnaMesta.getItemAt(i).toString().equals(r.getUplatnoMesto().toString())) {
                jComboBoxUplatnaMesta.setSelectedIndex(i);
            }
        }

    }

    private void pokreniNitZaProveru() {
        nitProvereIzmenaRadnika = new Thread(new Runnable() {
            @Override
            public void run() {
                while (!nitProvereIzmenaRadnika.isInterrupted()) {
                    if (imeUspesno == true && prezimeUspesno == true && korImeUspesno == true && sifraUspesno == true && ponovljenaSifraUspesno == true) {
                        jButtonSacuvajIzmene.setEnabled(true);
                    } else {
                        jButtonSacuvajIzmene.setEnabled(false);
                    }
                }
            }
        });
        nitProvereIzmenaRadnika.start();
    }

    private void postaviBordere() {
        jTextFieldID.setBorder(BorderFactory.createLineBorder(Color.black));
        jTextFieldIme.setBorder(BorderFactory.createLineBorder(Color.black));
        jTextFieldPrezime.setBorder(BorderFactory.createLineBorder(Color.black));
        jTextFieldKorisnickoIme.setBorder(BorderFactory.createLineBorder(Color.black));

        jPasswordField1.setBorder(BorderFactory.createLineBorder(Color.black));
        jPasswordField2.setBorder(BorderFactory.createLineBorder(Color.black));
    }

    private void sacuvajRadnika(Radnik r) throws IOException, Exception {
        KlijentTransferObjekat zahtev4 = new KlijentTransferObjekat();
        zahtev4.setOperacija(KlijentTransferObjekat.SACUVAJ_RADNIKA);
        zahtev4.setObjekatOperacije(r);
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev4);
        ServerTransferObjekat odgovor4 = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor4.getSignal() == -1) {
            throw new Exception(odgovor4.getPoruka());
        }

        JOptionPane.showMessageDialog(null, odgovor4.getPoruka());
    }
}
