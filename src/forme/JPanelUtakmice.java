/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import domen.Kvota;
import domen.StavkaTiketa;
import domen.Tiket;
import domen.Tip;
import domen.Utakmica;
import java.awt.Frame;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ButtonGroup;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import komunikacija.KontrolerKI;
import repozitorijum.Repozitorijum;
import transfer.ServerTransferObjekat;
import transfer.KlijentTransferObjekat;

/**
 *
 * @author KORISNIK
 */
public class JPanelUtakmice extends javax.swing.JPanel {

    List<Utakmica> listaUtakmica;
    String goloviDomacin = "";
    String goloviGost = "";

    public JPanelUtakmice() throws ClassNotFoundException, Exception {
        initComponents();
        popuniListu();
        dodajButtonGroup();
        postaviListenere();
    }

    private void postaviListenere() {
        listenerOnEnterKreirajNovuUtakmicu();
        listenerOnEnterPrikaziDetalje();
        listenerOnEnterUnesiRezultat();
        listenerOnEnterSacuvajUtakmicu();

    }

    private void listenerOnEnterKreirajNovuUtakmicu() {

        jButtonKreirajNovuUtakmicu.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    kreirajNovuUtakmicu();
                }

            }
        });

    }

    private void listenerOnEnterPrikaziDetalje() {

        jButtonPrikazi.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    prikaziDetalje();
                }

            }
        });

    }

    private void listenerOnEnterUnesiRezultat() {

        jButtonRezultat.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    unesiRezultatDugme();
                }
            }
        });

    }

    private void listenerOnEnterSacuvajUtakmicu() {

        jButtonSacuvajUtakmicu.addKeyListener(new KeyAdapter() {

            @Override
            public void keyPressed(KeyEvent e) {
                if (e.getKeyCode() == KeyEvent.VK_ENTER) {
                    sacuvajUtakmicu();
                }
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabelPronadjiUtakmicuPo = new javax.swing.JLabel();
        jRadioButtonID = new javax.swing.JRadioButton();
        jRadioButtonImeTima = new javax.swing.JRadioButton();
        jComboBoxPretraga = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDomacin = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldGost = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextFieldKec = new javax.swing.JTextField();
        jTextFieldIks = new javax.swing.JTextField();
        jTextFieldDvojka = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jTextFieldOdNulaDoDva = new javax.swing.JTextField();
        jTextFieldTriPlus = new javax.swing.JTextField();
        jButtonRezultat = new javax.swing.JButton();
        jButtonSacuvajUtakmicu = new javax.swing.JButton();
        jButtonPrikazi = new javax.swing.JButton();
        jTextFieldGoloviDomacin = new javax.swing.JTextField();
        jTextFieldGoloviGost = new javax.swing.JTextField();
        jTextFieldPretraga = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabelPocetak = new javax.swing.JLabel();
        jTextFieldPocetak = new javax.swing.JTextField();
        jLabelDatePatern = new javax.swing.JLabel();
        jButtonKreirajNovuUtakmicu = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(1357, 669));

        jLabelPronadjiUtakmicuPo.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabelPronadjiUtakmicuPo.setText("Pronadji utakmicu po:");

        jRadioButtonID.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jRadioButtonID.setSelected(true);
        jRadioButtonID.setText("ID-u");
        jRadioButtonID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonIDActionPerformed(evt);
            }
        });

        jRadioButtonImeTima.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jRadioButtonImeTima.setText("Imenu tima");
        jRadioButtonImeTima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonImeTimaActionPerformed(evt);
            }
        });

        jComboBoxPretraga.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel2.setText("Utakmica:");

        jTextFieldDomacin.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldDomacin.setToolTipText("");
        jTextFieldDomacin.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldDomacin.setNextFocusableComponent(jTextFieldGost);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel3.setText("Domaci tim:");

        jTextFieldGost.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldGost.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldGost.setNextFocusableComponent(jTextFieldPocetak);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel4.setText("Gostujuci tim:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel5.setText(":");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        jLabel6.setText("Kvote:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel7.setText("1");

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel8.setText("X");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel9.setText("2");

        jTextFieldKec.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldKec.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldKec.setNextFocusableComponent(jTextFieldDvojka);
        jTextFieldKec.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldKecFocusGained(evt);
            }
        });

        jTextFieldIks.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldIks.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldIks.setNextFocusableComponent(jTextFieldOdNulaDoDva);
        jTextFieldIks.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldIksFocusGained(evt);
            }
        });

        jTextFieldDvojka.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldDvojka.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldDvojka.setNextFocusableComponent(jTextFieldIks);
        jTextFieldDvojka.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldDvojkaFocusGained(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel10.setText("0-2");

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel11.setText("3+");

        jTextFieldOdNulaDoDva.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldOdNulaDoDva.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldOdNulaDoDva.setNextFocusableComponent(jTextFieldTriPlus);
        jTextFieldOdNulaDoDva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldOdNulaDoDvaFocusGained(evt);
            }
        });

        jTextFieldTriPlus.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldTriPlus.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldTriPlus.setNextFocusableComponent(jButtonSacuvajUtakmicu);
        jTextFieldTriPlus.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTextFieldTriPlusFocusGained(evt);
            }
        });

        jButtonRezultat.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonRezultat.setText("Unesi rezultat");
        jButtonRezultat.setEnabled(false);
        jButtonRezultat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRezultatActionPerformed(evt);
            }
        });

        jButtonSacuvajUtakmicu.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jButtonSacuvajUtakmicu.setText("Sacuvaj utakmicu");
        jButtonSacuvajUtakmicu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSacuvajUtakmicuActionPerformed(evt);
            }
        });

        jButtonPrikazi.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonPrikazi.setText("Prikazi detalje");
        jButtonPrikazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrikaziActionPerformed(evt);
            }
        });

        jTextFieldGoloviDomacin.setEditable(false);
        jTextFieldGoloviDomacin.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldGoloviDomacin.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTextFieldGoloviGost.setEditable(false);
        jTextFieldGoloviGost.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldGoloviGost.setDisabledTextColor(new java.awt.Color(0, 0, 0));

        jTextFieldPretraga.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jTextFieldPretraga.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                jTextFieldPretragaCaretUpdate(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabel12.setText("Rezultat:");

        jLabelPocetak.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabelPocetak.setText("Pocetak:");

        jTextFieldPocetak.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldPocetak.setNextFocusableComponent(jTextFieldKec);

        jLabelDatePatern.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jLabelDatePatern.setText("(yyyy-MM-dd HH:mm:ss)");

        jButtonKreirajNovuUtakmicu.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        jButtonKreirajNovuUtakmicu.setText("Kreiraj novu utakmicu");
        jButtonKreirajNovuUtakmicu.setToolTipText("");
        jButtonKreirajNovuUtakmicu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonKreirajNovuUtakmicuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(240, 240, 240)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelPronadjiUtakmicuPo, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonID)
                            .addComponent(jRadioButtonImeTima))
                        .addGap(392, 392, 392)
                        .addComponent(jButtonPrikazi, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTextFieldDomacin, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jTextFieldGoloviDomacin, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(29, 29, 29)
                        .addComponent(jTextFieldGoloviGost, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                        .addGap(593, 593, 593))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jComboBoxPretraga, 0, 293, Short.MAX_VALUE)
                    .addComponent(jTextFieldPretraga))
                .addGap(456, 456, 456))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonRezultat, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButtonSacuvajUtakmicu))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(139, 139, 139))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel9)
                                                .addGap(35, 35, 35)
                                                .addComponent(jTextFieldDvojka, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextFieldKec, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel8)
                                        .addGap(15, 15, 15)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(13, 13, 13)
                                                .addComponent(jTextFieldIks, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(116, 116, 116))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(77, 77, 77)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10)
                                                    .addComponent(jLabel11))
                                                .addGap(30, 30, 30)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(jTextFieldOdNulaDoDva)
                                                    .addComponent(jTextFieldTriPlus, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE)))
                                            .addComponent(jTextFieldGost, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGap(80, 80, 80)
                                                .addComponent(jLabel4))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextFieldPocetak, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(jLabelDatePatern))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(13, 13, 13)
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(566, 566, 566)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(490, 490, 490)
                        .addComponent(jLabelPocetak))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addComponent(jButtonKreirajNovuUtakmicu, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelPronadjiUtakmicuPo, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonPrikazi, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonID)
                            .addComponent(jTextFieldPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButtonImeTima)
                            .addComponent(jComboBoxPretraga, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jButtonKreirajNovuUtakmicu, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel12))
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldGoloviDomacin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jTextFieldDomacin, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5)
                        .addComponent(jTextFieldGost, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldGoloviGost, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPocetak)
                    .addComponent(jTextFieldPocetak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDatePatern))
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(jTextFieldKec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextFieldOdNulaDoDva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldDvojka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTriPlus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel9))
                        .addGap(0, 40, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldIks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRezultat)
                    .addComponent(jButtonSacuvajUtakmicu))
                .addGap(39, 39, 39))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButtonIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonIDActionPerformed
        // TODO add your handling code here:
        jTextFieldPretraga.setText("");
        jComboBoxPretraga.removeAllItems();
    }//GEN-LAST:event_jRadioButtonIDActionPerformed

    private void jRadioButtonImeTimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonImeTimaActionPerformed
        // TODO add your handling code here:
        jTextFieldPretraga.setText("");
        jComboBoxPretraga.removeAllItems();
    }//GEN-LAST:event_jRadioButtonImeTimaActionPerformed

    private void jButtonPrikaziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrikaziActionPerformed
        // TODO add your handling code here:
        prikaziDetalje();

    }//GEN-LAST:event_jButtonPrikaziActionPerformed
    private void prikaziDetalje() {

        if (((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost() != null) {
            if (((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost().equals("")) {
                JOptionPane.showMessageDialog(this, "Morate izabrati utakmicu!");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Morate izabrati utakmicu!");
            return;
        }
        popuniPolja();
        Utakmica utakmica = (Utakmica) jComboBoxPretraga.getSelectedItem();
        try {
            List<Kvota> listaKvotaZaUtakmicu = utakmica.getListaKvota();
            postaviKvote(listaKvotaZaUtakmicu);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }
    private void jButtonRezultatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRezultatActionPerformed
        unesiRezultatDugme();
    }//GEN-LAST:event_jButtonRezultatActionPerformed
    private void unesiRezultatDugme() {
        try {
            if (((Utakmica) jComboBoxPretraga.getSelectedItem()) == null || ((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost().equals("")) {
                JOptionPane.showMessageDialog(this, "Morate prvo izabrati utakmicu!");
                return;
            }

            Date datum = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(jTextFieldPocetak.getText());
            Date trenutnoVreme = new Date();
            if ((datum.getTime() + 7200000) > trenutnoVreme.getTime()) {
                throw new Exception("Utakmica se jos nije zavrsila!");
            }

            JDialogRezultat jdr = new JDialogRezultat(true);
            jdr.setLocationRelativeTo(null);
            jdr.setVisible(true);
        } catch (ParseException pe) {
            JOptionPane.showMessageDialog(this, "Morate izabrati utakmicu!");

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }

    }
    private void jButtonSacuvajUtakmicuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSacuvajUtakmicuActionPerformed
        // TODO add your handling code here:
        sacuvajUtakmicu();


    }//GEN-LAST:event_jButtonSacuvajUtakmicuActionPerformed
    private void sacuvajUtakmicu() {
        if (jButtonKreirajNovuUtakmicu.isEnabled()) {
            try {
                zapamtiNovuUtakmicu();
                JOptionPane.showMessageDialog(this, "Sistem je uspesno zapamtio novu utakmicu");
                jButtonSacuvajUtakmicu.setEnabled(false);

            } catch (IOException eio) {
                prikaziFormuPrijava();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        } else if (jButtonRezultat.isEnabled()) {
            try {
                unesiRezultat();
                JOptionPane.showMessageDialog(this, "Sistem je uspesno zapamtio rezultat utakmice");
                jTextFieldPretraga.setText("");

            } catch (IOException eio) {
                prikaziFormuPrijava();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        } else {
            try {
                unesiIzmene();
                JOptionPane.showMessageDialog(this, "Sistem je uspesno zapamtio izmene utakmice");

            } catch (IOException eio) {
                prikaziFormuPrijava();
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

        }

    }
    private void jButtonKreirajNovuUtakmicuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonKreirajNovuUtakmicuActionPerformed
        // TODO add your handling code here:
        kreirajNovuUtakmicu();
    }//GEN-LAST:event_jButtonKreirajNovuUtakmicuActionPerformed
    private void kreirajNovuUtakmicu() {

        pripremuFormuZaNovuUtakmicu();

        try {
            Utakmica utakmica = new Utakmica(new ArrayList<>());

            KlijentTransferObjekat zahtev10 = new KlijentTransferObjekat();
            zahtev10.setOperacija(KlijentTransferObjekat.KREIRAJ_NOVU_UTAKMICU);

            zahtev10.setObjekatOperacije(utakmica);
            KontrolerKI.vratiInstancu().posaljiZahtev(zahtev10);
            ServerTransferObjekat odgovor10 = KontrolerKI.vratiInstancu().procitajOdgovor();

            if (odgovor10.getSignal() == -1) {
                throw new Exception(odgovor10.getPoruka());
            }
            Repozitorijum.utakmica = ((List<Utakmica>) odgovor10.getObjekatIzvrsenjaOperacije()).get(0);

        } catch (IOException eio) {
            prikaziFormuPrijava();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

    }
    private void jTextFieldPretragaCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_jTextFieldPretragaCaretUpdate

        if (jRadioButtonID.isSelected()) {
            jComboBoxPretraga.removeAllItems();
            String id = jTextFieldPretraga.getText().trim();
            for (Utakmica utakmica : listaUtakmica) {
                String utakmicaId = Integer.toString(utakmica.getIdUtakmice());
                if (utakmicaId.startsWith(id)) {
                    jComboBoxPretraga.addItem(utakmica);
                    jComboBoxPretraga.showPopup();
                }
            }
            if (jComboBoxPretraga.getItemCount() == 0) {
                Utakmica u = new Utakmica();
                u.setDomacin("Ne postoji takva utakmica");
                u.setGost("");
                jComboBoxPretraga.addItem(u);
            }

        } else {
            jComboBoxPretraga.removeAllItems();
            String naziv = jTextFieldPretraga.getText().trim();
            for (Utakmica utakmica : listaUtakmica) {
                if (utakmica.getDomacin() != null) {
                    if (utakmica.getDomacin().toLowerCase().contains(naziv.toLowerCase()) || utakmica.getGost().toLowerCase().contains(naziv.toLowerCase())) {
                        jComboBoxPretraga.addItem(utakmica);
                        jComboBoxPretraga.showPopup();
                    }
                }
            }
            if (jComboBoxPretraga.getItemCount() == 0) {
                Utakmica u = new Utakmica();
                u.setDomacin("Ne postoji takva utakmica");
                u.setGost("");
                jComboBoxPretraga.addItem(u);
            }
        }
    }//GEN-LAST:event_jTextFieldPretragaCaretUpdate

    private void jTextFieldKecFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldKecFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextFieldKec.selectAll();
            }
        });
    }//GEN-LAST:event_jTextFieldKecFocusGained

    private void jTextFieldDvojkaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldDvojkaFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextFieldDvojka.selectAll();
            }
        });
    }//GEN-LAST:event_jTextFieldDvojkaFocusGained

    private void jTextFieldIksFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldIksFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextFieldIks.selectAll();
            }
        });
    }//GEN-LAST:event_jTextFieldIksFocusGained

    private void jTextFieldOdNulaDoDvaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldOdNulaDoDvaFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextFieldOdNulaDoDva.selectAll();
            }
        });
    }//GEN-LAST:event_jTextFieldOdNulaDoDvaFocusGained

    private void jTextFieldTriPlusFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldTriPlusFocusGained
        // TODO add your handling code here:
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jTextFieldTriPlus.selectAll();
            }
        });
    }//GEN-LAST:event_jTextFieldTriPlusFocusGained


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JButton jButtonKreirajNovuUtakmicu;
    private javax.swing.JButton jButtonPrikazi;
    private javax.swing.JButton jButtonRezultat;
    private javax.swing.JButton jButtonSacuvajUtakmicu;
    private javax.swing.JComboBox<Object> jComboBoxPretraga;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDatePatern;
    private javax.swing.JLabel jLabelPocetak;
    private javax.swing.JLabel jLabelPronadjiUtakmicuPo;
    private javax.swing.JRadioButton jRadioButtonID;
    private javax.swing.JRadioButton jRadioButtonImeTima;
    private javax.swing.JTextField jTextFieldDomacin;
    private javax.swing.JTextField jTextFieldDvojka;
    public static javax.swing.JTextField jTextFieldGoloviDomacin;
    public static javax.swing.JTextField jTextFieldGoloviGost;
    private javax.swing.JTextField jTextFieldGost;
    private javax.swing.JTextField jTextFieldIks;
    private javax.swing.JTextField jTextFieldKec;
    private javax.swing.JTextField jTextFieldOdNulaDoDva;
    private javax.swing.JTextField jTextFieldPocetak;
    private javax.swing.JTextField jTextFieldPretraga;
    private javax.swing.JTextField jTextFieldTriPlus;
    // End of variables declaration//GEN-END:variables

    private void popuniListu() throws IOException, IOException, ClassNotFoundException, Exception {
        jComboBoxPretraga.removeAllItems();
        KlijentTransferObjekat zahtev = new KlijentTransferObjekat();
        zahtev.setOperacija(KlijentTransferObjekat.VRATI_SVE_UTAKMICE);
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev);
        ServerTransferObjekat odgovor = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor.getSignal() == -1) {
            throw new Exception(odgovor.getPoruka());
        }
        listaUtakmica = (List<Utakmica>) odgovor.getObjekatIzvrsenjaOperacije();
    }

    public void pripremiZaUnosenjeRezultata() {

        jButtonRezultat.setEnabled(true);

        jLabelPocetak.setVisible(false);
        jLabelDatePatern.setVisible(false);

        jTextFieldPocetak.setEnabled(false);
        jTextFieldPocetak.setVisible(false);

        jTextFieldDomacin.setEnabled(false);
        jTextFieldGost.setEnabled(false);

        jTextFieldKec.setEnabled(false);
        jTextFieldDvojka.setEnabled(false);
        jTextFieldIks.setEnabled(false);
        jTextFieldOdNulaDoDva.setEnabled(false);
        jTextFieldTriPlus.setEnabled(false);

        jButtonKreirajNovuUtakmicu.setEnabled(false);
        jButtonKreirajNovuUtakmicu.setVisible(false);
    }

    public void pripremiZaIzmenuUtakmice() {

        jButtonKreirajNovuUtakmicu.setEnabled(false);
        jButtonKreirajNovuUtakmicu.setVisible(false);

    }

    public void pripremiZaUnosNoveUtakmice() {
        try {

            Utakmica utakmica = new Utakmica(new ArrayList<>());

            KlijentTransferObjekat zahtev10 = new KlijentTransferObjekat();
            zahtev10.setOperacija(KlijentTransferObjekat.KREIRAJ_NOVU_UTAKMICU);

            zahtev10.setObjekatOperacije(utakmica);
            KontrolerKI.vratiInstancu().posaljiZahtev(zahtev10);
            ServerTransferObjekat odgovor10 = KontrolerKI.vratiInstancu().procitajOdgovor();

            if (odgovor10.getSignal() == -1) {
                throw new Exception(odgovor10.getPoruka());
            }
            Repozitorijum.utakmica = ((List<Utakmica>) odgovor10.getObjekatIzvrsenjaOperacije()).get(0);

        } catch (IOException eio) {
            prikaziFormuPrijava();
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, e.getMessage());
        }

        srediFormuZaUnosNove();

    }

    private void zapamtiNovuUtakmicu() throws Exception {

        Date datum = proveriPoljaUtakmice();
        proveriKvote();
        postaviUtakmicu(datum);

        double brojKvote1 = 0.0;
        double brojKvote2 = 0.0;
        double brojKvote3 = 0.0;
        double brojKvote4 = 0.0;
        double brojKvote5 = 0.0;

        if (jTextFieldKec.getText().isEmpty()) {

        } else {
            brojKvote1 = Double.parseDouble(jTextFieldKec.getText());
            if ((Double.parseDouble(jTextFieldKec.getText())) < 1.0) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldIks.getText().isEmpty()) {

        } else {
            brojKvote2 = Double.parseDouble(jTextFieldIks.getText());
            if ((Double.parseDouble(jTextFieldIks.getText())) < 1.0) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldDvojka.getText().isEmpty()) {

        } else {
            brojKvote3 = Double.parseDouble(jTextFieldDvojka.getText());
            if ((Double.parseDouble(jTextFieldDvojka.getText())) < 1.0) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldOdNulaDoDva.getText().isEmpty()) {

        } else {
            brojKvote4 = Double.parseDouble(jTextFieldOdNulaDoDva.getText());
            if ((Double.parseDouble(jTextFieldOdNulaDoDva.getText())) < 1.0) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldTriPlus.getText().isEmpty()) {

        } else {
            brojKvote5 = Double.parseDouble(jTextFieldTriPlus.getText());
            if ((Double.parseDouble(jTextFieldTriPlus.getText())) < 1.0) {
                brojKvote1 = 0.0;
            }
        }

        Tip tip1 = new Tip(1, "1");
        Tip tip2 = new Tip(2, "x");
        Tip tip3 = new Tip(3, "2");
        Tip tip4 = new Tip(4, "0-2");
        Tip tip5 = new Tip(5, "3+");

        Kvota kvota1 = new Kvota(repozitorijum.Repozitorijum.utakmica, brojKvote1, tip1);
        Kvota kvota2 = new Kvota(repozitorijum.Repozitorijum.utakmica, brojKvote2, tip2);
        Kvota kvota3 = new Kvota(repozitorijum.Repozitorijum.utakmica, brojKvote3, tip3);
        Kvota kvota4 = new Kvota(repozitorijum.Repozitorijum.utakmica, brojKvote4, tip4);
        Kvota kvota5 = new Kvota(repozitorijum.Repozitorijum.utakmica, brojKvote5, tip5);

        postaviKvoteZaUtakmicu(kvota1, kvota2, kvota3, kvota4, kvota5);

        KlijentTransferObjekat zahtev4 = new KlijentTransferObjekat();
        zahtev4.setOperacija(KlijentTransferObjekat.ZAPAMTI_UTAKMICU_I_KVOTE);
        zahtev4.setObjekatOperacije(Repozitorijum.utakmica);

        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev4);
        ServerTransferObjekat odgovor4 = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor4.getSignal() == -1) {
            throw new Exception(odgovor4.getPoruka());
        }

        pripremiPoljaFormePosleZapamti();

    }

    private void unesiRezultat() throws Exception {

        proveriUtakmicuZaUnosRezultata();

        Utakmica utakmica = new Utakmica();
        utakmica = postaviUtakmicuZaUnosRezultata(utakmica);

        KlijentTransferObjekat zahtev5 = new KlijentTransferObjekat();
        zahtev5.setOperacija(KlijentTransferObjekat.ZAPAMTI_REZULTAT);
        zahtev5.setObjekatOperacije(utakmica);
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev5);
        ServerTransferObjekat odgovor5 = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor5.getSignal() == -1) {
            throw new Exception(odgovor5.getPoruka());
        }

        //ovo da bih mogao dva puta da menjam nad istom
        popuniListu();

    }

    private void unesiIzmene() throws Exception {
        Date datum = proveriUtakmicuZaIzmenu();

        proveriKvote();

        Utakmica utakmica = new Utakmica(new ArrayList<>());
        utakmica = postaviPoljaUtakmiceZaIzmenu(utakmica, datum);

        double brojKvote1 = 0.0;
        double brojKvote2 = 0.0;
        double brojKvote3 = 0.0;
        double brojKvote4 = 0.0;
        double brojKvote5 = 0.0;

        if (jTextFieldKec.getText().isEmpty()) {

        } else {
            brojKvote1 = Double.parseDouble(jTextFieldKec.getText());
            if ((Double.parseDouble(jTextFieldKec.getText())) < 1) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldIks.getText().isEmpty()) {

        } else {
            brojKvote2 = Double.parseDouble(jTextFieldIks.getText());
            if ((Double.parseDouble(jTextFieldIks.getText())) < 1) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldDvojka.getText().isEmpty()) {

        } else {
            brojKvote3 = Double.parseDouble(jTextFieldDvojka.getText());
            if ((Double.parseDouble(jTextFieldDvojka.getText())) < 1) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldOdNulaDoDva.getText().isEmpty()) {

        } else {
            brojKvote4 = Double.parseDouble(jTextFieldOdNulaDoDva.getText());
            if ((Double.parseDouble(jTextFieldOdNulaDoDva.getText())) < 1) {
                brojKvote1 = 0.0;
            }
        }

        if (jTextFieldTriPlus.getText().isEmpty()) {

        } else {
            brojKvote5 = Double.parseDouble(jTextFieldTriPlus.getText());
            if ((Double.parseDouble(jTextFieldTriPlus.getText())) < 1) {
                brojKvote1 = 0.0;
            }
        }

        Tip tip1 = new Tip(1, "1");
        Tip tip2 = new Tip(2, "x");
        Tip tip3 = new Tip(3, "2");
        Tip tip4 = new Tip(4, "0-2");
        Tip tip5 = new Tip(5, "3+");

        Kvota kvota1 = new Kvota(utakmica, brojKvote1, tip1);
        Kvota kvota2 = new Kvota(utakmica, brojKvote2, tip2);
        Kvota kvota3 = new Kvota(utakmica, brojKvote3, tip3);
        Kvota kvota4 = new Kvota(utakmica, brojKvote4, tip4);
        Kvota kvota5 = new Kvota(utakmica, brojKvote5, tip5);

        utakmica = dodajKvoteUtakmici(utakmica, kvota1, kvota2, kvota3, kvota4, kvota5);

        List<Kvota> listaKvotaa = dodajKvoteUListu(kvota1, kvota2, kvota3, kvota4, kvota5);

        Utakmica u = new Utakmica();
        u = utakmica;

        izmeniUtakmicuZahtev(u, listaKvotaa);

        //ovo da mi mogao dva puta da menjam nad istom
        popuniListu();
        for (Utakmica ut : listaUtakmica) {
            if (ut.getIdUtakmice() == utakmica.getIdUtakmice()) {
                jComboBoxPretraga.addItem((Utakmica) u);

            }
        }

    }

    private void dodajButtonGroup() {
        buttonGroup.add(jRadioButtonID);
        buttonGroup.add(jRadioButtonImeTima);
    }

    private void popuniPolja() {
        jTextFieldDomacin.setText(((Utakmica) jComboBoxPretraga.getSelectedItem()).getDomacin());
        jTextFieldGost.setText(((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost());

        DateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
        String datumString = df.format(((Utakmica) jComboBoxPretraga.getSelectedItem()).getPocetak().getTime());

        jTextFieldPocetak.setText(datumString);
        //jTextFieldPocetak.setText(((Utakmica) jComboBoxPretraga.getSelectedItem()).getPocetak().toString().substring(0,((Utakmica) jComboBoxPretraga.getSelectedItem()).getPocetak().toString().length()-2));

        if (((Utakmica) jComboBoxPretraga.getSelectedItem()).getGoloviDomacin() == -1) {
            jTextFieldGoloviDomacin.setText("/");
            jTextFieldGoloviGost.setText("/");

        } else {
            jTextFieldGoloviDomacin.setText((Integer.toString(((Utakmica) jComboBoxPretraga.getSelectedItem()).getGoloviDomacin())));
            jTextFieldGoloviGost.setText((Integer.toString(((Utakmica) jComboBoxPretraga.getSelectedItem()).getGoloviGost())));
        }
    }

    private void postaviKvote(List<Kvota> listaKvotaZaUtakmicu) {
        for (Kvota kvota : listaKvotaZaUtakmicu) {
            if (kvota.getTip().getIdTipa() == 1) {
                jTextFieldKec.setText(Double.toString(kvota.getBrojKvote()));
            }
            if (kvota.getTip().getIdTipa() == 2) {
                jTextFieldIks.setText(Double.toString(kvota.getBrojKvote()));
            }
            if (kvota.getTip().getIdTipa() == 3) {
                jTextFieldDvojka.setText(Double.toString(kvota.getBrojKvote()));
            }
            if (kvota.getTip().getIdTipa() == 4) {
                jTextFieldOdNulaDoDva.setText(Double.toString(kvota.getBrojKvote()));
            }
            if (kvota.getTip().getIdTipa() == 5) {
                jTextFieldTriPlus.setText(Double.toString(kvota.getBrojKvote()));

            }
        }
    }

    private void prikaziFormuPrijava() {
        JOptionPane.showMessageDialog(this, "Izgubili ste konekciju sa serverom! Probajte ponovo da se ulogujete!");
        FPrijava fp = new FPrijava();
        fp.setLocationRelativeTo(null);
        fp.setResizable(false);
        fp.setVisible(true);
    }

    private void pripremuFormuZaNovuUtakmicu() {
        jButtonSacuvajUtakmicu.setEnabled(true);

        jTextFieldDomacin.setEnabled(true);
        jTextFieldGost.setEnabled(true);
        jTextFieldPocetak.setEnabled(true);
        jTextFieldKec.setEnabled(true);
        jTextFieldIks.setEnabled(true);
        jTextFieldDvojka.setEnabled(true);
        jTextFieldOdNulaDoDva.setEnabled(true);
        jTextFieldTriPlus.setEnabled(true);

        jTextFieldDomacin.setText("");
        jTextFieldGost.setText("");
        jTextFieldPocetak.setText("");
        jTextFieldKec.setText("");
        jTextFieldIks.setText("");
        jTextFieldDvojka.setText("");
        jTextFieldOdNulaDoDva.setText("");
        jTextFieldTriPlus.setText("");
    }

    private void srediFormuZaUnosNove() {
        jLabelPronadjiUtakmicuPo.setVisible(false);

        jRadioButtonID.setEnabled(false);
        jRadioButtonID.setVisible(false);

        jRadioButtonImeTima.setEnabled(false);
        jRadioButtonImeTima.setVisible(false);

        jTextFieldPretraga.setEnabled(false);
        jTextFieldPretraga.setVisible(false);

        jButtonPrikazi.setEnabled(false);
        jButtonPrikazi.setVisible(false);

        jComboBoxPretraga.setEnabled(false);
        jComboBoxPretraga.setVisible(false);
    }

    private Date proveriPoljaUtakmice() throws Exception {

        Date datum = null;

        if (jTextFieldDomacin.getText().isEmpty() || jTextFieldDomacin.getText().equals(null)) {
            throw new Exception("Morate uneti domaci tim");

        }
        if (jTextFieldGost.getText().isEmpty() || jTextFieldGost.getText().equals(null)) {
            throw new Exception("Morate uneti gostujuci tim");
        }

        try {
            String datumString = jTextFieldPocetak.getText();

            datum = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").parse(datumString);
        } catch (Exception e) {
            throw new Exception("Morate uneti datum i vreme u formatu: yyyy-MM-dd HH:mm:ss ");
        }

        return datum;
    }

    private void proveriKvote() throws Exception {
        try {
            if (!jTextFieldKec.getText().isEmpty() || jTextFieldKec.getText().equals(null)) {
                Double.parseDouble(jTextFieldKec.getText());
            }
            if (!jTextFieldIks.getText().isEmpty() || jTextFieldIks.getText().equals(null)) {
                Double.parseDouble(jTextFieldIks.getText());
            }
            if (!jTextFieldDvojka.getText().isEmpty() || jTextFieldDvojka.getText().equals(null)) {
                Double.parseDouble(jTextFieldDvojka.getText());
            }
            if (!jTextFieldOdNulaDoDva.getText().isEmpty() || jTextFieldOdNulaDoDva.getText().equals(null)) {
                Double.parseDouble(jTextFieldOdNulaDoDva.getText());
            }
            if (!jTextFieldTriPlus.getText().isEmpty() || jTextFieldTriPlus.getText().equals(null)) {
                Double.parseDouble(jTextFieldTriPlus.getText());
            }
        } catch (Exception e) {
            throw new Exception("Kvota za bilo koji tip mora biti broj");
        }
    }

    private void postaviUtakmicu(Date datum) {
        repozitorijum.Repozitorijum.utakmica.setDomacin(jTextFieldDomacin.getText());
        repozitorijum.Repozitorijum.utakmica.setGost(jTextFieldGost.getText());
        repozitorijum.Repozitorijum.utakmica.setPocetak(datum);
        repozitorijum.Repozitorijum.utakmica.setGoloviDomacin(-1);
        repozitorijum.Repozitorijum.utakmica.setGoloviGost(-1);
    }

    private void postaviKvoteZaUtakmicu(Kvota kvota1, Kvota kvota2, Kvota kvota3, Kvota kvota4, Kvota kvota5) {
        repozitorijum.Repozitorijum.utakmica.getListaKvota().add(kvota1);
        repozitorijum.Repozitorijum.utakmica.getListaKvota().add(kvota2);
        repozitorijum.Repozitorijum.utakmica.getListaKvota().add(kvota3);
        repozitorijum.Repozitorijum.utakmica.getListaKvota().add(kvota4);
        repozitorijum.Repozitorijum.utakmica.getListaKvota().add(kvota5);
    }

    private void pripremiPoljaFormePosleZapamti() {
        jTextFieldDomacin.setEnabled(false);
        jTextFieldGost.setEnabled(false);
        jTextFieldPocetak.setEnabled(false);
        jTextFieldKec.setEnabled(false);
        jTextFieldIks.setEnabled(false);
        jTextFieldDvojka.setEnabled(false);
        jTextFieldOdNulaDoDva.setEnabled(false);
        jTextFieldTriPlus.setEnabled(false);
    }

    private void proveriUtakmicuZaUnosRezultata() throws Exception {
        if (jComboBoxPretraga.getSelectedItem() == null) {
            throw new Exception("Morate prvo izabrati utakmicu");
        }
        if (jTextFieldDomacin.getText().isEmpty()) {
            throw new Exception("Morate prvo izabrati utakmicu");
        }

        if (jTextFieldGoloviDomacin.getText().equals("/")) {
            throw new Exception("Unesite rezultat utakmice");
        }
    }

    private Utakmica postaviUtakmicuZaUnosRezultata(Utakmica utakmica) {
        utakmica.setIdUtakmice(((Utakmica) jComboBoxPretraga.getSelectedItem()).getIdUtakmice());
        utakmica.setGoloviDomacin(Integer.parseInt(jTextFieldGoloviDomacin.getText()));
        utakmica.setGoloviGost(Integer.parseInt(jTextFieldGoloviGost.getText()));
        return utakmica;
    }

    private Date proveriUtakmicuZaIzmenu() throws Exception {
        Date datum = null;
        if (jComboBoxPretraga.getItemCount() == 0) {
            throw new Exception("Morate prvo izabrati utakmicu");
        }
        if (((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost() != null) {
            if (((Utakmica) jComboBoxPretraga.getSelectedItem()).getGost().equals("")) {
                throw new Exception("Morate prvo izabrati utakmicu");
            }
        }

        if (jTextFieldDomacin.getText().isEmpty() || jTextFieldDomacin.getText().equals(null)) {
            throw new Exception("Morate uneti domaci tim");

        }
        if (jTextFieldGost.getText().isEmpty() || jTextFieldGost.getText().equals(null)) {
            throw new Exception("Morate uneti gostujuci tim");
        }

        try {
            String datumString = jTextFieldPocetak.getText().concat(".0");

            datum = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss.0").parse(datumString);
        } catch (Exception e) {
            throw new Exception("Morate uneti datum i vreme u formatu: yyyy-MM-dd HH:mm:ss");
        }
        return datum;
    }

    private Utakmica postaviPoljaUtakmiceZaIzmenu(Utakmica utakmica, Date datum) {
        utakmica.setIdUtakmice(((Utakmica) jComboBoxPretraga.getSelectedItem()).getIdUtakmice());
        List<Kvota> listaKvota = new ArrayList<>();

        utakmica.setDomacin(jTextFieldDomacin.getText());

        utakmica.setGost(jTextFieldGost.getText());
        System.out.println(utakmica.getGost());
        utakmica.setPocetak(datum);
        if (jTextFieldGoloviDomacin.getText().equals("/")) {
            utakmica.setGoloviDomacin(-1);
        } else {
            utakmica.setGoloviDomacin(Integer.parseInt(jTextFieldGoloviDomacin.getText()));
        }
        if (jTextFieldGoloviGost.getText().equals("/")) {
            utakmica.setGoloviGost(-1);
        } else {
            utakmica.setGoloviGost(Integer.parseInt(jTextFieldGoloviGost.getText()));
        }
        utakmica.setListaKvota(listaKvota);
        return utakmica;
    }

    private Utakmica dodajKvoteUtakmici(Utakmica utakmica, Kvota kvota1, Kvota kvota2, Kvota kvota3, Kvota kvota4, Kvota kvota5) {
        utakmica.getListaKvota().add(kvota1);
        utakmica.getListaKvota().add(kvota2);
        utakmica.getListaKvota().add(kvota3);
        utakmica.getListaKvota().add(kvota4);
        utakmica.getListaKvota().add(kvota5);

        return utakmica;
    }

    private List<Kvota> dodajKvoteUListu(Kvota kvota1, Kvota kvota2, Kvota kvota3, Kvota kvota4, Kvota kvota5) {
        List<Kvota> listaKvotaa = new ArrayList();
        listaKvotaa.add(kvota1);
        listaKvotaa.add(kvota2);
        listaKvotaa.add(kvota3);
        listaKvotaa.add(kvota4);
        listaKvotaa.add(kvota5);
        return listaKvotaa;
    }

    private void izmeniUtakmicuZahtev(Utakmica u, List<Kvota> listaKvotaa) throws IOException, ClassNotFoundException, Exception {
        HashMap<String, Object> hmap = new HashMap<>();
        hmap.put("utakmica", u);
        hmap.put("listaKvota", listaKvotaa);

        KlijentTransferObjekat zahtev6 = new KlijentTransferObjekat();
        zahtev6.setOperacija(KlijentTransferObjekat.IZMENI_UTAKMICU_I_KVOTE);
        zahtev6.setObjekatOperacije(hmap);
        System.out.println("U klijentu pred slanje" + u.getGost());
        KontrolerKI.vratiInstancu().posaljiZahtev(zahtev6);
        ServerTransferObjekat odgovor6 = KontrolerKI.vratiInstancu().procitajOdgovor();
        if (odgovor6.getSignal() == -1) {
            throw new Exception(odgovor6.getPoruka());
        }
    }

}
